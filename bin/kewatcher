#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path(File.dirname(__FILE__) + '/../lib')

require 'rubygems'
require 'yaml'
require 'optparse'
require 'resque-sliders/kewatcher'

options = {
  :verbosity => 0,
  :max_children => 10
}

OptionParser.new do |opt|
  opt.banner = "Usage: #{File.basename($0)} [options]"

  opt.separator ""
  opt.separator "Options:"

  opt.on("-c", "--config CONFIG", "Resque Config (Yaml)") do |config|
    options[:config] = YAML.load_file(File.expand_path(config)) rescue nil
    options[:config] ||= config
  end

  opt.on("-r", "--rakefile RAKEFILE", "Rakefile location") do |rakefile|
    options[:rakefile] = rakefile
  end

  opt.on("-p", "--pidfile PIDFILE", "PID File location") do |pidfile|
    options[:pidfile] = pidfile
  end

  opt.on("-f", "--force", "FORCE KILL ANY OTHER RUNNING KEWATCHERS") do
    options[:force] = true
  end

  opt.on("-v", "--verbose", "Verbosity (Can be specified more than once, -vv)") do
    options[:verbosity] += 1
  end

  opt.on("-m", "--max MAX", "Max Children (default: 10)") do |max|
    options[:max_children] = max.to_i
  end

  opt.on("-t", "--time TIME", "Total Time (in minutes) to wait for ALL Workers to die before having them force killed (default: 2 minutes)") do |ttime|
    options[:ttime] = ttime.to_f
  end

  opt.on("-w", "--wait WAIT_TIME", "Minimum Time (in seconds) to wait for individual Worker to die at a time (default: 25 seconds)") do |wait|
    options[:wait] = wait.to_f
  end

  opt.on("-h", "--help", "This help") do
    puts opt
    exit
  end

end.parse!

begin
  options[:config] = case options[:config]
  when Hash
    options[:config][ENV['RAILS_ENV'] || 'development']
  when String
    options[:config]
  end
rescue Object => e
  puts e
  exit 1
end

options[:config] ||= 'localhost:6379'

kewatcher = Resque::Plugins::ResqueSliders::KEWatcher.new(options)
kewatcher.run!
